apiVersion: v1
kind: ConfigMap
metadata:
  name: osg-hosted-ce-{{ .Values.Instance }}-configuration
  labels:
    app: osg-hosted-ce
    instance: {{ .Values.Instance }}
    release: {{ .Release.Name }}
    app.kubernetes.io/part-of: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
data:
  90-local.ini: |
    [Gateway]
    job_envvar_path=$PATH

    [Site Information]
    {{ if or (.Values.Developer.Enabled) (not .Values.Topology.Production) }}
    group = OSG-ITB
    {{ else }}
    group = OSG
    {{ end }}
    host_name = localhost
    resource = {{ .Values.Topology.Resource }}
    resource_group = {{ .Values.Topology.ResourceGroup }}
    sponsor = {{ .Values.Topology.Sponsor }}
    contact = {{ .Values.Topology.Contact }}
    email = {{ .Values.Topology.ContactEmail }}
    city = {{ .Values.Topology.City }}
    country = {{ .Values.Topology.Country }}
    latitude = {{ .Values.Topology.Latitude }}
    longitude = {{ .Values.Topology.Longitude }}
    batch_systems = {{ .Values.RemoteCluster.Batch }}

    [BOSCO]
    enabled = False

    [Storage]
    grid_dir = {{ .Values.RemoteCluster.GridDir }}
    worker_node_temp = {{ .Values.RemoteCluster.WorkerNodeTemp }}

    [Subcluster {{ .Values.Topology.Resource }}]
    name = {{ .Values.Topology.Resource }}
    ram_mb = {{ .Values.RemoteCluster.MemoryPerNode }}
    cores_per_node = {{ .Values.RemoteCluster.CoresPerNode }}
    max_wall_time = {{ .Values.RemoteCluster.MaxWallTime }}
    allowed_vos = *

    [Squid]
    {{ if .Values.RemoteCluster.Squid }}
    enabled = True
    {{ else }}
    enabled = False
    {{ end }}
    location =  {{ .Values.RemoteCluster.Squid }}
    # Operator-provided osg-configure configuration below this line
{{ .Values.OsgConfigureConfig | default "" | indent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: osg-hosted-ce-{{ .Values.Instance }}-htcondor-ce-configuration
  labels:
    app: osg-hosted-ce
    instance: {{ .Values.Instance }}
    release: {{ .Release.Name }}
    app.kubernetes.io/part-of: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
data:
  90-instance.conf: |+
{{ if .Values.Networking.RequestIP }}
    TCP_FORWARDING_HOST = {{ .Values.Networking.RequestIP }}
{{ end }}

    SLATE_HOSTED_CE = True
    SCHEDD_ATTRS = $(SCHEDD_ATTRS) SLATE_HOSTED_CE

    # Templatize IDTOKEN generation for glidein -> CE collector advertising (SOFTWARE-5556)
    {{- range $index, $map := .Values.SciTokenRemoteUserMapping }}
    {{- range $url, $user := $map }}
    # N.B. Special chars in a helm template regex need to be escaped with '\\'
    JOB_ROUTER_CREATE_IDTOKEN_{{ mustRegexReplaceAll "[^A-Za-z0-9_]" $user "_" }} @=end
      sub = "{{ $user }}@users.htcondor.org"
      kid = "POOL"
      lifetime = 604800
      scope = "ADVERTISE_STARTD, ADVERTISE_MASTER, READ"
      dir = "/usr/share/condor-ce/glidein-tokens/{{ $user }}"
      filename = "ce_{{ $user }}.idtoken"
      owner = "{{ $user }}"
    @end
    JOB_ROUTER_CREATE_IDTOKEN_NAMES = $(JOB_ROUTER_CREATE_IDTOKEN_NAMES) {{ mustRegexReplaceAll "[^A-Za-z0-9_]" $user "_" }}
    {{- end }}
    {{- end }}

    # Refresh IDTOKENs every 15 minutes
    JOB_ROUTER_IDTOKEN_REFRESH = 900

    # We don't use 'SendIDToken = token-name"' here because it's a route command,
    # not a job attr, meaning that it would have to be specified per route
    JOB_ROUTER_DEFAULTS @=jrd
    $(JOB_ROUTER_DEFAULTS)
    [
      eval_set_TransferInput = strcat(TransferInput,",/usr/share/condor-ce/glidein-tokens/", Owner, "/ce_", OWNER, ".idtoken");
    ]
    @jrd

    # HACK: The job router doesn't recognize grid universe routes (the default) without
    # a "GridResource" attribute and the Gridmanager doesn't evaluate GridResource expressions.
    # So we set a dummy "GridResource" attribute and use "eval_set_GridResource"  to force the
    # JobRouter to respect our will
    JOB_ROUTER_DEFAULTS @=jrd
    $(JOB_ROUTER_DEFAULTS)
    [
    GridResource = "intentionally left blank";
    eval_set_GridResource = strcat("batch ", "{{ .Values.RemoteCluster.Batch }} ",
                                   Owner, "@", "{{ .Values.RemoteCluster.LoginHost }}",
                                   " --rgahp-glite ", "~/{{ .Values.RemoteCluster.BoscoDir | default "~/bosco"}}/glite"
                                   {{ if .Values.BoscoOverrides.TarballURL | default "" | contains "bosco-1.3"  }}
                                   , " --rgahp-script batch_gahp"
                                   {{ end }}
                                   {{ if not .Values.RemoteCluster.SSHBatchMode }}
                                   , " --rgahp-nobatchmode"
                                   {{ end }}
                                   {{ if not .Values.RemoteCluster.LoginShell }}
                                   , " --rgahp-nologin"
                                   {{ end }}
                                   );
    ]
    @jrd

    JOB_ROUTER_ENTRIES = [Name = "Hosted_CE_default_route"]

    JOB_ROUTER_ROUTE_NAMES = Hosted_CE_default_route

    # New Job Router transforms for token and GridResource construction
    JOB_ROUTER_TRANSFORM_Token @=jrt
        SET TransferInput "$(MY.TransferInput),/usr/share/condor-ce/glidein-tokens/$(MY.Owner)/ce_$(MY.Owner).idtoken"
    @jrt
    JOB_ROUTER_POST_ROUTE_TRANSFORM_NAMES = $(JOB_ROUTER_POST_ROUTE_TRANSFORM_NAMES) Token

    JOB_ROUTER_TRANSFORM_GridResource @=jrt
        hosted_grid_resource = batch {{ .Values.RemoteCluster.Batch }} $(MY.Owner)@{{ .Values.RemoteCluster.LoginHost }} --rgahp-glite ~/{{ .Values.RemoteCluster.BoscoDir | default "~/bosco"}}/glite
        {{- if not .Values.RemoteCluster.SSHBatchMode }} --rgahp-nobatchmode{{ end }}
        {{- if not .Values.RemoteCluster.LoginShell }} --rgahp-nologin{{ end }}
        SET GridResource "$(hosted_grid_resource)"
        # This is the old name for hosted_grid_resource.
        # We can remove this once all CEs are updated to not use it.
        gr = $(hosted_grid_resource)
    @jrt
    JOB_ROUTER_PRE_ROUTE_TRANSFORM_NAMES = $(JOB_ROUTER_PRE_ROUTE_TRANSFORM_NAMES) GridResource

    # Fix bug in CERequirements pre transform in base CE config
    # Bug is fixed in 23.0.X (HTCONDOR-2276)
    JOB_ROUTER_TRANSFORM_CERequirements @=jrt
        SET CondorCE 1
        if defined MY.default_CERequirements
            SET CERequirements "$(MY.default_CERequirements),CondorCE"
        else
            SET CERequirements "CondorCE"
        endif
    @jrt

    {{ if .Values.JobRouterUseTransforms }}
    JOB_ROUTER_USE_DEPRECATED_ROUTER_ENTRIES = False
    JOB_ROUTER_ROUTE_Hosted_CE_default_route @=jrt
        GridResource = "dummy"
    @jrt
    {{ else }}
    JOB_ROUTER_USE_DEPRECATED_ROUTER_ENTRIES = True
    {{ end }}

    # Operator-provided HTCondor-CE configuration below this line
{{ .Values.HTCondorCeConfig | default "" | indent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: osg-hosted-ce-{{ .Values.Instance }}-slate-scitokens
  labels:
    app: osg-hosted-ce
    instance: {{ .Values.Instance }}
    release: {{ .Release.Name }}
    app.kubernetes.io/part-of: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
data:
  50-slate-scitokens.conf: |+
    {{- range $index, $map := .Values.SciTokenRemoteUserMapping }}
    {{- range $url, $user := $map }}
    SCITOKENS /^{{ $url | replace "/" "\\/" | replace "." "\\." | replace "-" "\\-" }}{{ if not ( $url | contains "," ) }},{{ end }}/ {{ $user }}
    {{- end }}
    {{- end }}
{{ if .Values.RemoteCluster.KnownHosts }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: osg-hosted-ce-{{ .Values.Instance }}-known-hosts
  labels:
    app: osg-hosted-ce
    instance: {{ .Values.Instance }}
    release: {{ .Release.Name }}
    app.kubernetes.io/part-of: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
data:
  ssh_known_hosts: |+
{{ .Values.RemoteCluster.KnownHosts | indent 4}}
{{ end }}
